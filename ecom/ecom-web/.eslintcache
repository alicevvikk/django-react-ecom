[{"C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\index.js":"1","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\reportWebVitals.js":"2","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\App.js":"3","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\components\\index.js":"4","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\components\\navbar.js":"5","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\components\\homeCard.js":"6","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\components\\home.js":"7","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\components\\products.js":"8","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\components\\slider.js":"9","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\components\\detailPage.js":"10","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\components\\login.js":"11","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\components\\register.js":"12","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\lookup\\index.js":"13","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\lookup\\lookProducts.js":"14","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\lookup\\lookNavbarItems.js":"15","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\lookup\\lookKind.js":"16","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\lookup\\lookSpecific.js":"17","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\lookup\\updateCart.js":"18","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\lookup\\lookCookie.js":"19"},{"size":543,"mtime":1607183759295,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":2128,"mtime":1608090265335,"results":"23","hashOfConfig":"21"},{"size":478,"mtime":1607622131230,"results":"24","hashOfConfig":"21"},{"size":2163,"mtime":1608087441553,"results":"25","hashOfConfig":"21"},{"size":1769,"mtime":1608059602923,"results":"26","hashOfConfig":"21"},{"size":821,"mtime":1607588328770,"results":"27","hashOfConfig":"21"},{"size":6166,"mtime":1607582930387,"results":"28","hashOfConfig":"21"},{"size":792,"mtime":1607572927871,"results":"29","hashOfConfig":"21"},{"size":1478,"mtime":1607586549344,"results":"30","hashOfConfig":"21"},{"size":2233,"mtime":1608057257043,"results":"31","hashOfConfig":"21"},{"size":3156,"mtime":1607976900152,"results":"32","hashOfConfig":"21"},{"size":390,"mtime":1608057238030,"results":"33","hashOfConfig":"21"},{"size":405,"mtime":1608014086903,"results":"34","hashOfConfig":"21"},{"size":451,"mtime":1608014083095,"results":"35","hashOfConfig":"21"},{"size":418,"mtime":1608014065859,"results":"36","hashOfConfig":"21"},{"size":437,"mtime":1608014089223,"results":"37","hashOfConfig":"21"},{"size":754,"mtime":1608058766447,"results":"38","hashOfConfig":"21"},{"size":548,"mtime":1608057222245,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1cdznwu",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\index.js",[],["86","87"],"C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\reportWebVitals.js",[],"C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\App.js",["88","89"],"C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\components\\index.js",[],"C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\components\\navbar.js",["90"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Badge\r\n} from \"reactstrap\";\r\n\r\nimport { getNavbarItems } from \"../lookup\";\r\nimport { BiCart } from \"react-icons/bi\";\r\nimport { Link } from \"react-router-dom\";\r\n/*\r\nfunction getProductKinds(callBack) {\r\n  var url = \"http://localhost:8000/api/kinds\";\r\n  const responseType = \"json\";\r\n  const method = \"GET\";\r\n  const xhr = new XMLHttpRequest();\r\n\r\n  xhr.open(method, url);\r\n\r\n  xhr.onload = () => {\r\n    //console.log(xhr.response, xhr.status);\r\n    callBack(xhr.response, xhr.status);\r\n  };\r\n\r\n  xhr.send();\r\n}\r\n*/\r\nexport function NavbarComponent(props) {\r\n  const { cart, user } = props;\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const [navItems, setNavItems] = useState([]);\r\n  useEffect(() => {\r\n    const myCallBack = (response, status) => {\r\n      console.log(\"received data: \", response, status);\r\n      if (status === 200) {\r\n        setNavItems(response);\r\n        console.log(\"received data2: \", navItems, status);\r\n      }\r\n    };\r\n    getNavbarItems(myCallBack);\r\n  }, []);\r\n\r\n  return (\r\n    <Navbar color=\"light\" light expand=\"md\" sticky=\"top\">\r\n      <NavbarBrand className=\"ml-5 pl-5\" href=\"/\">\r\n        BRAND\r\n      </NavbarBrand>\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"mx-auto \" navbar>\r\n          {navItems.map((navItem, index) => {\r\n            return (\r\n              <NavItem className=\"ml-5\" key={index}>\r\n                <NavLink tag={Link} to= {`/${navItem[1]}`} >\r\n                  {navItem[1]}\r\n                </NavLink>\r\n              </NavItem>\r\n            );\r\n          })}\r\n          {user.user === 'AnonymousUser' ? <NavItem ><a href=\"/accounts/login\"> Login</a></NavItem>\r\n        : <NavItem> <a href=\"/accounts/logout\"> Logout</a> </NavItem>}\r\n        </Nav>\r\n\r\n      </Collapse>\r\n      <NavItem>\r\n        <BiCart size = \"1.5rem\"></BiCart>\r\n        <Badge color=\"primary\"  >{cart.lengthOrder}</Badge>\r\n      </NavItem>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\components\\homeCard.js",["91","92","93"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n  CardColumns,\r\n} from \"reactstrap\";\r\n\r\nimport {updateCart} from \"../lookup\"\r\n\r\nexport function CardComponent(props) {\r\n  const { cart, products, setCart } = props;\r\n  //const products = props.products;\r\n\r\n\r\n \r\n\r\n  return (\r\n    <div className=\"container cards\">\r\n      <div className=\"featured\">\r\n        Featured Products\r\n        {cart.length}\r\n        <div className=\"featured-underline\"></div>\r\n      </div>\r\n      <CardColumns>\r\n        {products.map((product, index) => {\r\n          if (product.is_featured)\r\n            return (\r\n              <Card key={index}>\r\n                <CardImg\r\n                  top\r\n                  width=\"100%\"\r\n                  src=\"https://dl.airtable.com/.attachmentThumbnails/5ebc46a9e31a09cbc6078190ab035abc/8480b064\"\r\n                  alt=\"Card image cap\"\r\n                />\r\n                <CardBody>\r\n                  <CardTitle tag=\"h5\">{product.name}</CardTitle>\r\n                  <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n                    Card subtitle\r\n                  </CardSubtitle>\r\n                  <CardText>{product.description}</CardText>\r\n                  <Button onClick={() => updateCart(product.id, \"add\")} action = \"add\" color=\"primary\">\r\n                    Add to cart\r\n                  </Button>\r\n                  <Button color=\"info ml-2\">Detail</Button>\r\n                  <p style={{ float: \"right\", color: \"brown\" }}>\r\n                    ${product.price}\r\n                  </p>\r\n                </CardBody>\r\n              </Card>\r\n            );\r\n          else return;\r\n        })}\r\n      </CardColumns>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\components\\home.js",[],"C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\components\\products.js",["94","95","96"],"import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Detail } from \".\";\r\nimport { getProducts } from \"../lookup\";\r\n\r\nexport function Products() {\r\n  // One state below:\r\n  const [products, setProducts] = useState([]);\r\n  useEffect(() => {\r\n    const myCallBack = (response, status) => {\r\n      if (status === 200) {\r\n        console.log(\"products resnpose:\", response);\r\n        setProducts(response);\r\n      }\r\n    };\r\n\r\n    getProducts(myCallBack);\r\n  }, []);\r\n  // One state below:\r\n  const [filterText, setFilter] = useState(\"\");\r\n  const [filterPrice, setPrice] = useState(3099);\r\n  const [filterCategory, setCategory] = useState(\"all\");\r\n\r\n  const filterProducts = (event) => {\r\n    if (event.type === \"change\") {\r\n      if (event.target.name === \"text\") {\r\n        setFilter(event.target.value);\r\n      } else if (event.target.name === \"price\") {\r\n        console.log(\"youre here\");\r\n        setPrice(parseInt(event.target.value));\r\n        document.querySelector(\r\n          \".price-display\"\r\n        ).textContent = `${filterPrice} $`;\r\n        console.log(event.target.value);\r\n\r\n        event.target.value = filterPrice;\r\n        console.log(filterPrice);\r\n      }\r\n    } else if (event.type === \"click\") {\r\n      event.preventDefault();\r\n\r\n      let element = document.getElementsByClassName(\"category-btn\");\r\n      for (let i = 0; i < element.length; i++) {\r\n        if (element[i] === event.target) {\r\n          element[i].className = \"category-btn btn btn-outline-info active\";\r\n        } else {\r\n          element[i].className = \"category-btn btn btn-outline-info btn-sm\";\r\n        }\r\n      }\r\n\r\n      setCategory(event.target.name);\r\n    }\r\n  };\r\n\r\n  const filtered = useMemo(() => {\r\n    return products.filter((product) => {\r\n      if (filterCategory.toLowerCase() === \"all\")\r\n        return filterText.length > 0\r\n          ? product.name.toLowerCase().includes(filterText.toLowerCase()) &&\r\n              product.price < filterPrice\r\n          : product.price < filterPrice;\r\n      else if (product.kind.toLowerCase() === filterCategory.toLowerCase())\r\n        return filterText.length > 0\r\n          ? product.name.toLowerCase().includes(filterText.toLowerCase()) &&\r\n              product.price < filterPrice\r\n          : product.price < filterPrice;\r\n      // just in case\r\n      else if (filterCategory === \"\") return product.price < filterPrice;\r\n    });\r\n  }, [filterCategory, filterPrice, filterText, products]);\r\n\r\n  return (\r\n    <div className=\"products-page\">\r\n      <div className=\"card-filters\">\r\n        <form>\r\n          <div class=\"form-search col mt-5 ml-2 \">\r\n            <input\r\n              onChange={filterProducts}\r\n              type=\"text\"\r\n              name=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Search\"\r\n            />\r\n          </div>\r\n\r\n          <p></p>\r\n          <h5 clas>Category</h5>\r\n          <hr></hr>\r\n          <div className=\"form-buttons container mt-4\">\r\n            <button\r\n              className=\"category-btn btn btn-outline-info btn-sm\"\r\n              name=\"All\"\r\n              onClick={filterProducts}\r\n            >\r\n              All\r\n            </button>\r\n            <p></p>\r\n            <button\r\n              className=\"category-btn btn btn-outline-info btn-sm\"\r\n              name=\"Electronic\"\r\n              onClick={filterProducts}\r\n            >\r\n              Electronic\r\n            </button>\r\n            <p></p>\r\n            <button\r\n              className=\"category-btn btn btn-outline-info btn-sm\"\r\n              name=\"Furniture\"\r\n              onClick={filterProducts}\r\n            >\r\n              Furniture\r\n            </button>\r\n            <p></p>\r\n            <button\r\n              className=\"category-btn btn btn-outline-info btn-sm\"\r\n              name=\"Dining\"\r\n              onClick={filterProducts}\r\n            >\r\n              Dining\r\n            </button>\r\n            <hr></hr>\r\n          </div>\r\n          <div>\r\n            <div className=\"form-price\">\r\n              <h5>Price</h5>\r\n              <p className=\"price-display\"> {filterPrice}$</p>\r\n              <input\r\n                onChange={filterProducts}\r\n                type=\"range\"\r\n                name=\"price\"\r\n                id=\"input\"\r\n                min=\"0\"\r\n                max=\"3099\"\r\n                value={filterPrice}\r\n              ></input>\r\n            </div>\r\n          </div>\r\n          <hr></hr>\r\n        </form>\r\n      </div>\r\n      <div className=\"card-group container\">\r\n        {filtered.map((product, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <div className=\"card shadow\" style={{ width: \"18rem\" }}>\r\n                <img\r\n                  className=\"card-img-top\"\r\n                  src=\"https://dl.airtable.com/.attachmentThumbnails/65708b701baa3a84883ad48301624b44/2de058af\"\r\n                  alt=\"Card image cap\"\r\n                />\r\n                <Link className=\"link\" to={`/Detail/${product.id}`}>\r\n                  <svg\r\n                    stroke=\"currentColor\"\r\n                    fill=\"white\"\r\n                    stroke-width=\"0\"\r\n                    viewBox=\"0 0 512 512\"\r\n                    height=\"1em\"\r\n                    width=\"1em\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <path d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"></path>\r\n                  </svg>\r\n                </Link>\r\n                <div className=\"card-footer\">\r\n                  <p className=\"card-text\">{product.name}</p>\r\n                  <p className=\"card-price\" style={{ float: \"right\" }}>\r\n                    {product.price}$\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\components\\slider.js",[],"C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\components\\detailPage.js",["97","98"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getSpecificProduct} from '../lookup';\r\nexport function Detail() {\r\n  let { product_id } = useParams();\r\n  const [product, setProduct] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const myCallBack = (response, status) => {\r\n      if (status === 200) {\r\n        response = response[0]\r\n        setProduct(response);\r\n        console.log(\"specific item:\", response);\r\n      }\r\n      \r\n    }; getSpecificProduct(myCallBack, product_id)\r\n  }, [])\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"detailPage container mt-5\">\r\n        <div className=\"back-btn-container\">\r\n          <button className=\"back-btn\">Back to Shopping</button>\r\n        </div>\r\n        <div className=\"detail-section container\">\r\n          <div className=\"detail-img-div container\">\r\n            <img\r\n              className=\"detail-img container\"\r\n              src=\"https://dl.airtable.com/.attachmentThumbnails/65708b701baa3a84883ad48301624b44/2de058af\"\r\n            ></img>\r\n          </div>\r\n          <div className=\"product-detail container\">\r\n            <div className=\"product-title\">{product.name}</div>\r\n            <div className=\"product-desc\">{product.description}</div>\r\n            <div className=\"product-available\"></div>\r\n            <div className=\"product-brand\">{product.id} </div>\r\n            <hr></hr>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\components\\login.js",["99","100"],"import React, { useEffect, useState } from \"react\";\r\nimport {getCookie} from \"../lookup\"\r\n\r\nexport function LoginComponent({setUser}) {\r\n\r\n\r\n    function postData(e) {\r\n    const myForm = e.target;\r\n    const myFormData = new FormData(myForm);\r\n    console.log(myFormData, \"x\");\r\n    const url = e.target.getAttribute('action');\r\n    const method = myForm.getAttribute(\"method\");\r\n    const responseType = \"json\";\r\n    /*\r\n      const data = JSON.stringify({\r\n          username,\r\n          password\r\n      })\r\n      */\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.responseType = responseType;\r\n    const csrftoken = getCookie(\"csrftoken\");\r\n    xhr.open(method, url);\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\");\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\r\n    xhr.onload = () => {\r\n      setUser(xhr.response);\r\n      console.log(\"statusdgsgs\", xhr.response);\r\n    };\r\n    xhr.send(JSON.stringify(myFormData));\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-container container mt-5\">\r\n      <form id=\"login-id\"className=\"login-form\" method=\"POST\" onSubmit = {postData} action= \"http://localhost:8000/accounts/login/\">\r\n        <div className=\"mb-3\">\r\n          <label for=\"exampleInputEmail1\" className=\"form-label\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control \"\r\n            id=\"username_id\"\r\n            aria-describedby=\"emailHelp\"\r\n            name=\"username\"\r\n          />\r\n          <div id=\"emailHelp\" className=\"form-text\">\r\n            We'll never share your email with anyone else.\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label for=\"exampleInputPassword1\" className=\"form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password_id\"\r\n            name=\"password\"\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\components\\register.js",["101","102"],"import React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function RegisterComponent() {\r\n  function getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== \"\") {\r\n      const cookies = document.cookie.split(\";\");\r\n      for (let i = 0; i < cookies.length; i++) {\r\n        const cookie = cookies[i].trim();\r\n        // Does this cookie string begin with the name we want?\r\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return cookieValue;\r\n  }\r\n\r\n  function registerUser(e) {\r\n    //e.preventDefault();\r\n    const myForm = e.target;\r\n    const myFormData = new FormData(myForm);\r\n    console.log(myFormData, \"x\");\r\n    const url = e.target.getAttribute('action');\r\n    const method = myForm.getAttribute(\"method\");\r\n    const responseType = \"json\";\r\n    /*\r\n      const data = JSON.stringify({\r\n          username,\r\n          password\r\n      })\r\n      */\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.responseType = responseType;\r\n    const csrftoken = getCookie(\"csrftoken\");\r\n    xhr.open(method, url);\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\");\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\r\n    xhr.onload = () => {\r\n      console.log(\"status\", xhr.status);\r\n    };\r\n    xhr.send(JSON.stringify(myFormData));\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-container container mt-5\">\r\n      <form\r\n        className=\"login-form\"\r\n        id=\"register-id\"\r\n        onSubmit={registerUser}\r\n        method=\"POST\"\r\n        action = \"http://localhost:8000/register\"\r\n        \r\n      >\r\n        {\" \"}\r\n        <div className=\"mb-3\">\r\n          <label for=\"exampleInputEmail1\" className=\"form-label\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control \"\r\n            id=\"exampleInputEmail1\"\r\n            aria-describedby=\"emailHelp\"\r\n            name=\"username\"\r\n          />\r\n          <div id=\"emailHelp\" className=\"form-text\">\r\n            We'll never share your email with anyone else.\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label for=\"exampleInputPassword1\" className=\"form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"exampleInputPassword1\"\r\n            name=\"password1\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label for=\"exampleInputPassword1\" className=\"form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"exampleInputPassword1\"\r\n            name=\"password2\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\lookup\\index.js",[],"C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\lookup\\lookProducts.js",[],["103","104"],"C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\lookup\\lookNavbarItems.js",[],"C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\lookup\\lookKind.js",[],"C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\lookup\\lookSpecific.js",[],"C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\lookup\\updateCart.js",[],"C:\\Users\\alice\\Desktop\\react-django-ecom\\ecom\\ecom-web\\src\\lookup\\lookCookie.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":7,"column":51,"nodeType":"111","messageId":"112","endLine":7,"endColumn":65},{"ruleId":"109","severity":1,"message":"113","line":7,"column":67,"nodeType":"111","messageId":"112","endLine":7,"endColumn":84},{"ruleId":"114","severity":1,"message":"115","line":48,"column":6,"nodeType":"116","endLine":48,"endColumn":8,"suggestions":"117"},{"ruleId":"109","severity":1,"message":"118","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"119","line":16,"column":27,"nodeType":"111","messageId":"112","endLine":16,"endColumn":34},{"ruleId":"120","severity":1,"message":"121","line":56,"column":16,"nodeType":"122","messageId":"123","endLine":56,"endColumn":23},{"ruleId":"109","severity":1,"message":"124","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":16},{"ruleId":"120","severity":1,"message":"125","line":56,"column":38,"nodeType":"126","messageId":"127","endLine":56,"endColumn":40},{"ruleId":"128","severity":1,"message":"129","line":146,"column":17,"nodeType":"130","endLine":150,"endColumn":19},{"ruleId":"114","severity":1,"message":"131","line":17,"column":6,"nodeType":"116","endLine":17,"endColumn":8,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":27,"column":13,"nodeType":"130","endLine":30,"endColumn":14},{"ruleId":"109","severity":1,"message":"118","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"135","line":1,"column":28,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"118","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"135","line":1,"column":28,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"105","replacedBy":"136"},{"ruleId":"107","replacedBy":"137"},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'LoginComponent' is defined but never used.","Identifier","unusedVar","'RegisterComponent' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navItems'. Either include it or remove the dependency array.","ArrayExpression",["140"],"'useEffect' is defined but never used.","'setCart' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'Detail' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'product_id'. Either include it or remove the dependency array.",["141"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useState' is defined but never used.",["138"],["139"],"no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [navItems]",{"range":"146","text":"147"},"Update the dependencies array to be: [product_id]",{"range":"148","text":"149"},[1190,1192],"[navItems]",[546,548],"[product_id]"]